definitions:
  model.Contact:
    properties:
      emails:
        items:
          type: string
        type: array
      phoneNumbers:
        items:
          type: string
        type: array
      primaryContactId:
        type: integer
      secondaryContactIds:
        items:
          type: integer
        type: array
    type: object
  model.IdentityRequest:
    properties:
      email:
        type: string
      phoneNumber:
        type: string
    type: object
  model.IdentityResponse:
    properties:
      contact:
        $ref: '#/definitions/model.Contact'
    type: object
  model.UserSwaggo:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      link_precedence:
        type: string
      linked_id:
        type: integer
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /identify:
    post:
      consumes:
      - application/json
      description: This endpoint is used to return data related to email or phone
        number supplied
      parameters:
      - description: enter email and phone number
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.IdentityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.IdentityResponse'
      summary: Return user data
  /users/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided data
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserSwaggo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserSwaggo'
      summary: Create a new user
  /users/update:
    put:
      consumes:
      - application/json
      description: Update an existing user with the provided data
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserSwaggo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an existing user
swagger: "2.0"
